{
    // scope:
    //
    // source.php constant.other
    //   blacklist:
    //     constant.other.class
    // source.php support.function.magic

    "scope": "source.php constant.other - constant.other.class, source.php support.function.magic",
    "completions": [

    // --- Routing ---    

        {
            "trigger":"ci-routes",
            "contents":"\\$routes->get('${1:url}', '${2:Controller::method}');"
        }, 
        {
            "trigger":"ci-routes:segment",
            "contents":"\\$routes->get('${1:url}/(:segment)', '${2:Controller::method}/\\$1');"
        },
        {
            "trigger":"ci-routes:any",
            "contents":"\\$routes->get('(:any)', '${1:Controller::method}/\\$1');"
        }, 

    // --- use Some\Namespace; --- 

        {
            "trigger":"ci-useController",
            "contents":"use CodeIgniter\\Controller;"
        },
        {
            "trigger":"ci-useModel",
            "contents":"use App\\Models\\\\${1:Foo}Model;"
        }, 


    // --- BASICS ---    
        {
            "trigger":"ci-t",
            "contents":"\\$this->"
        },
        {
            "trigger":"ci-t-req",
            "contents":"\\$this->request"
        },
        {
            "trigger":"ci-t-res",
            "contents":"\\$this->response"
        },
        {
            "trigger":"ci-t-log",
            "contents":"\\$this->logger"
        }, 

    // --- Loading Stuff inside a Controller ---

        {
            "trigger":"ci-helpers",
            "contents":"protected \\$helpers = ['${1:url}'];"
        },
        {
            "trigger":"ci-newModel",
            "contents":"\\$model = new ${1:Foo}Model();"
        },
        {
            "trigger":"ci-getModel",
            "contents":"\\$model->get${1:Foo}();"
        },
        {
            "trigger":"ci-loadParser",
            "contents":"\\$parser = \\Config\\Services::parser();"
        },
        {
            "trigger":"ci-loadPView",
            "contents":"echo \\$parser->setData(\\$data)${0}->render('${1:template}');"
        },



        

   
    ]
}